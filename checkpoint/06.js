// 6Ô∏è‚É£ ***** EJERCICIO 6 ALGORITMOS***** - ordenarRopa() 6Ô∏è‚É£
// Se desorden√≥ todo el inventario de ropa! hay prendas por todas partes.
// Por el momento tendremos que solucionar el problema creando la funci√≥n üß¶ ordenarRopa() üß¶, la cual recibir√° por par√°metros
// un array de objetos anidados, que representar√°n cada prenda. Cada objeto tendr√° dentro una propiedad nombre y un precio entero.
// Tendr√°s que implementar un algoritmo de ordenamiento para poder organizar toda la ropa de MAYOR a MENOR seg√∫n el precio.
//
//
// EJEMPLOS:
// Dado el siguiente arreglo:
// [{ nombre: 'Camiseta', precio: 12}, { nombre: 'Pantalon', precio: 2 }, { nombre: 'Saco', precio: 23 }, { nombre: 'Gorra', precio: 4 }]
//
// ordenarRopa(array) Devuelve ‚û°
// [{ nombre: 'Saco', precio: 23 }, { nombre: 'Camiseta', precio: 12 }, { nombre: 'Gorra', precio: 4 }, { nombre: 'Pantalon', precio: 2 }]
//
// REQUISITOS:
//  üü¢ Implementar alg√∫n algoritmo de ordenamiento para ordenar el arreglo de MAYOR a MENOR
//  üü¢ NO utilizar el m√©todo sort de array!

function ordenarRopa(ropa) {
  // Tu c√≥digo aqu√≠:
  let cambio = true;
  while (cambio) {
    cambio = false;
    for (let i = 0; i < ropa.length - 1; i++) {
      const actual = ropa[i];
      const mayor = ropa[i + 1];
      if (actual.precio < mayor.precio) {
        [ropa[i], ropa[i + 1]] = [mayor, actual];
        cambio = true;
      }
    }
  }
  return ropa;
}

// ‚ö†Ô∏è NO MODIFICAR NADA POR DEBAJO DE ESTA L√çNEA ‚ö†Ô∏è
module.exports = {
  ordenarRopa,
};
