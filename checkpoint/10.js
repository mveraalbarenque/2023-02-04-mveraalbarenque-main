const { BinarySearchTree } = require('../DS');
// ‚ö†Ô∏è NO MODIFICAR NADA POR ENCIMA DE ESTA L√çNEA ‚ö†Ô∏è
//
//
//
//
// üîü ***** EJERCICIO 10 BINARYSEARCHTREE***** - BinarySearchTree.vender() üîü 
// Lleg√≥ la hora! el primer cliente se dispone a realizar la primera compra de la tienda.
// Para poder vend√©rsela, tendr√°s que agregar al prototype de BinarySearchTree, el m√©todo üí∞ vender() üí∞,
// el cu√°l recibir√° por par√°metros un array de prendas a vender.
// Tendr√°s que recorrer el √°rbol (que contiene objetos al igual que el ejerecicio previo) y agregar la propiedad 'vendido' como valor true a cada
// uno de los nodos que coincida con los elementos del array. 
// Aclaraci√≥n: Tanto los nodos del √°rbol, como los elementos del array, ser√°n valores √∫nicos.
//
// EJEMPLOS:
// Dado el siguiente √°rbol:
//                         { nombre: "Camiseta", num: 20 }
//                          /                           \
//           {nombre: "Saco", num: 7}          {nombre: "Abrigo", num: 30}
//                       /                                     \
//         {nombre: "Pantalon", num: 6}               {nombre: "Gorra", num: 42}
//
// Y dado el siguiente arreglo: ["Gorra", "Pantalon", "Saco"];
//
//  ‚ùó BinarySearchTree.vender(arreglo) ‚ùó: transforma el √°rbol en ‚û°
//
//                             { nombre: "Camiseta", num: 20 }
//                              /                             \
//        {nombre: "Saco", num: 7, vendido: true}      {nombre: "Abrigo", num: 30 }
//                          /                                       \
// {nombre: "Pantalon", num: 6, vendido: true}            {nombre: "Gorra", num: 42, vendido: true}
//
// REQUISITOS:
//  üü¢ Agregar la propiedad "vendido: true" a los nodos que coincidan con alguno de los elementos del array
//  üü¢ Si el arreglo viene vac√≠o, la funci√≥n retorna false!

BinarySearchTree.prototype.vender = function (array) {
    // Tu c√≥digo aqu√≠:
  }
  
  // ‚ö†Ô∏è NO MODIFICAR NADA POR DEBAJO DE ESTA L√çNEA ‚ö†Ô∏è
  module.exports = {
    BinarySearchTree
  };